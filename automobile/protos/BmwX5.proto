#VRML_SIM V8.6 utf8
#tags: static
# Model of an BMW X5 car using the Car proto as a base.
# The vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.
# Sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles)

PROTO BmwX5 [
  field SFVec3f      translation              0 0.4 0
  field SFRotation   rotation                 0 1 0 0
  vrmlField SFColor  color                    0.43 0.11 0.1
  vrmlField SFColor  specularColor            0.61 0.7 0.78
  field SFString     engineSound              "sounds/engine.wav"
  field SFString     name                     "vehicle"
  field SFString     controller               "void"
  field SFString     controllerArgs           ""
  field SFBool       synchronization          TRUE
  field SFBool       rearMirror               FALSE
  field SFBool       leftWingMirror           FALSE
  field SFBool       rightWingMirror          FALSE
  field SFBool       windshieldWipers         TRUE
  field SFFloat      mirrorFar                200.0
  field MFNode       sensorsSlotFront         [ ]
  field MFNode       sensorsSlotRear          [ ]
  field MFNode       sensorsSlotTop           [ ]
  field MFNode       sensorsSlotCenter        [ ]
  field SFBool       frontSpotLights          FALSE
  field SFBool       interior                 FALSE
  field SFBool       completeInterior         FALSE
  field SFBool       steeringWheel            FALSE
  field SFFloat      outerWindowTransparency  0
  field SFFloat      innerWindowTransparency  1
]
{
  %{
    local frontSpotLights = fields.frontSpotLights.value
    local interior = fields.interior.value
    local rearMirror = fields.rearMirror.value
    if interior == false and rearMirror then
      io.stdout:write("Rear mirror display disabled but rear mirror camera is still active.\n")
      io.stdout:write("You can disable it using the 'rearMirror' parameter.\n")
    end
    local outerWindowTransparency = fields.outerWindowTransparency.value
    local innerWindowTransparency = fields.innerWindowTransparency.value
    if interior == false and ( outerWindowTransparency ~= fields.outerWindowTransparency.defaultValue or innerWindowTransparency ~= fields.innerWindowTransparency.defaultValue ) then
      outerWindowTransparency = fields.outerWindowTransparency.defaultValue
      innerWindowTransparency = fields.innerWindowTransparency.defaultValue
      io.stdout:write("Window transparencies were reset to default values.\n")
    end
  }%
  Car {
    translation IS translation
    rotation IS rotation
    engineSound IS engineSound
    trackFront 1.628
    trackRear 1.628
    wheelbase 2.995
    time0To100 7
    engineMinRPM 1000
    engineMaxRPM 6500
    brakeCoefficient 1400
    engineFunctionCoefficients 34.11 0.136 -0.00001461
    wheelsDampingConstant 2
    gearRatio   [-12.5 12.5 8 5.35 4.3 4]
    wheelFrontLeft DEF WHEEL BmwX5Wheel {
      physics Physics {
        density -1
        mass 30
      }
    }
    wheelFrontRight USE WHEEL
    wheelRearRight USE WHEEL
    wheelRearLeft USE WHEEL
    extensionSlot [
      # Sensors slots
      Transform {
        translation 0 0.3 -1
        children IS sensorsSlotRear
      }
      Transform {
        translation 0 0.45 3.85
        rotation 0 1 0 3.14159
        children IS sensorsSlotFront
      }
      Transform {
        translation 0 1.45 1
        rotation 0 1 0 3.14159
        children IS sensorsSlotTop
      }
      Transform {
        translation 0 0 0
        rotation 0 1 0 3.14159
        children IS sensorsSlotCenter
      }
      # lights
      AutomobileLights {
        front [
          Group {
            children [
              %{ if frontSpotLights then }%
                SpotLight {
                  attenuation 0.2 0 0
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction -0.2 -1 1
                  location 0.65 0.45 3.95
                  radius 20
                }
                SpotLight {
                  attenuation 0.2 0 0
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction 0.2 -1 1
                  location -0.65 0.45 3.95
                  radius 20
                }
              %{ end }%
              BmwX5FrontLight {
              }
            ]
          }
        ]
        rightIndicator [
          BmwX5RightIndicator {
          }
        ]
        leftIndicator [
          BmwX5LeftIndicator {
          }
        ]
        antifog [
          BmwX5AntiFogLight {
          }
        ]
        rear [
          BmwX5RearLight {
          }
        ]
        braking [
          BmwX5BrakingLight {
          }
        ]
        backwards [
          BmwX5BackwardsLight {
          }
        ]
      }
      # windshield wipers
      %{ if fields.windshieldWipers.value then }%
      DEF RIGHT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis 0.04 -2.19 -1.7
          anchor 0.05 0.79 2.55
        }
        device [
          DEF LEFT_WIPER_MOTOR RotationalMotor {
            name "right_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
          DEF WIPER_SENSOR PositionSensor {
            name "wiper_sensor"
          }
        ]
        endPoint Solid {
          children [
            BmwX5RightWiper{
              %{ if outerWindowTransparency ~= 0 then }%
                castShadows TRUE
              %{ end }%
            }
          ]
        }
      }
      DEF LEFT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis -0.08 -1.85 -1.25
          anchor 0.63 0.84 2.46
        }
        device [
          DEF RIGHT_WIPER_MOTOR RotationalMotor {
            name "left_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
        ]
        endPoint Solid {
          children [
            BmwX5LeftWiper {
              %{ if outerWindowTransparency ~= 0 then }%
                castShadows TRUE
              %{ end }%
            }
          ]
        }
      }
      %{ end }%
      BmwX5Mesh {
        color IS color
        specularColor IS specularColor
        outerWindowTransparency %{= outerWindowTransparency }%
      }
      %{ if innerWindowTransparency ~= 1 then }%
          BmwX5InnerWindow {
            innerWindowTransparency %{= innerWindowTransparency }%
          }
      %{ end }%
      %{ if fields.rightWingMirror.value then }%
          DEF RIGHT_WING_DISPLAY Display {
            children [
      %{ end }%
      BmwX5RightWingMirror {
      }
      %{ if fields.rightWingMirror.value then }%
            ]
            name "right_wing_display"
            width 512
            height 256
          }
      %{ end }%
      %{ if fields.leftWingMirror.value then }%
          DEF LEFT_WING_DISPLAY Display {
            children [
      %{ end }%
      BmwX5LeftWingMirror {
      }
      %{ if fields.leftWingMirror.value then }%
            ]
            name "left_wing_display"
            width 512
            height 256
          }
      %{ end }%
      # vehicle interior
      %{ if fields.interior.value then }%
              BmwX5Interior {
              }
              # When active, the parameter changes REAR_DISPLAY Shape to a display
              %{ if fields.rearMirror.value then }%
                  DEF REAR_DISPLAY Display {
                    children [
              %{ end }%
              BmwX5CentralMirror {
              }
              %{ if fields.rearMirror.value then }%
                    ]
                    name "rear_display"
                    width 256
                    height 64
                  }
              %{ end }%
              %{ if fields.completeInterior.value then }%
                  BmwX5RearInterior {
                  }
              %{ end }%
              %{ if fields.steeringWheel.value then }%
                BmwX5SteeringWheel {
                }
              %{ end }%
      %{ end }%
      # mirror cameras
      %{ if fields.leftWingMirror.value then }%
          DEF LEFT_WING_CAMERA Camera {
            translation 0.9 0.9 1.2
            rotation 0 1 0 6.0816
            fieldOfView 0.5236
            name "left_wing_camera"
            width 512
            height 256
            far %{= fields.mirrorFar.value }%
          }
      %{ end }%
      %{ if fields.rightWingMirror.value then }%
          DEF RIGHT_WING_CAMERA Camera {
            translation -0.9 0.9 1.2
            rotation 0 1 0 0.2016
            fieldOfView 0.5236
            name "right_wing_camera"
            width 512
            height 256
            far %{= fields.mirrorFar.value }%
          }
      %{ end }%
      %{ if fields.rearMirror.value then }%
          DEF REAR_CAMERA Camera {
            translation 0 1.3 -0.7
            name "rear_camera"
            width 256
            height 64
            far %{= fields.mirrorFar.value }%
          }
      %{ end }%
    ]
    name IS name
    model "BMW X5"
    controller IS controller
    controllerArgs IS controllerArgs
    synchronization IS synchronization
    boundingObject Group {
      children [
        Transform {
          translation 0 0.29 2.6775
          children [
            Box {
              size 1.73 0.76 2
            }
          ]
        }
        Transform {
          translation 0 0.63 0.5875
          children [
            Box {
              size 1.73 1.44 2.14
            }
          ]
        }
        Transform {
          translation 0 0.53 -0.1725
          children [
            Box {
              size 1.73 0.78 1.41
            }
          ]
        }
      ]
    }
    radarCrossSection 100
    recognitionColors [
      %{= fields.color.value.r }% %{= fields.color.value.g }% %{= fields.color.value.b }%
    ]
    physics Physics {
      density -1
      mass 2000
      centerOfMass [
        0 0.1 1.2975
      ]
      inertiaMatrix [
        4473.54 4346.1 1125.07
        0 0 -846.89
      ]
    }
  }
}
